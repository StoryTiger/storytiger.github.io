<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>StroyTiger的blogs</title>
  
  <subtitle>过去、现在、未来......</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-01-23T01:41:46.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Tiger Bob</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用dd命令创建系统恢复盘</title>
    <link href="http://example.com/2021/01/23/use-dd-to-establish-system-images/"/>
    <id>http://example.com/2021/01/23/use-dd-to-establish-system-images/</id>
    <published>2021-01-23T00:25:51.000Z</published>
    <updated>2021-01-23T01:41:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用dd命令可以很方便的是整个系统恢复到过去的某一时刻，不必借用任何其它软件。<br>环境：<br>Linux Mint 20.1安装在一块512G的固态硬盘上；<br>镜像文件要放在移动硬盘上，是一块seagete的2T物理磁盘。</p><ol><li><p>首先利用从网上下载的linux的iso安装镜像，制作U盘安装盘。利用U盘安装盘，可以很方便的进入linux环境（请参照各linux版本的安装说明完成本步）</p></li><li><p>用U盘进入linux系统后，打开终端窗口，mount移动硬盘（也可使用操作系统的图形界面完成）</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo fdisk -l </span><br></pre></td></tr></table></figure><p> 确认/dev/hdb对应的是移动硬盘</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkdir -p /media/mint/seagate</span><br><span class="line">$ sudo mount /dev/hdb /media/mint/seagate</span><br></pre></td></tr></table></figure></li><li><p>创建镜像</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ dd <span class="keyword">if</span>=/dev/nvme0n1 bs=4M | gzip &gt; /media/mint/seagate/image.gz</span><br></pre></td></tr></table></figure><p> /dev/nvmen01是操作系统所在的固态硬盘。bs参数可以根据自己硬盘的情况调整，以保证速度最快。  </p></li><li><p>恢复镜像<br> 如果采用了逻辑卷来管理硬盘，一定要擦除目标盘上的逻辑卷信息：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo lvremove ...</span><br><span class="line">$ sudo vgremove ... </span><br><span class="line">$ sudo pvremove ... </span><br></pre></td></tr></table></figure><p> 擦除目标盘上的文件系统信息：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo wipefs -a /dev/nvme0n1 </span><br></pre></td></tr></table></figure><p> 创建镜像：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gzip -dc /media/mint/seagate/image.gz | dd of=/dev/nvme0n1 bs=4M</span><br></pre></td></tr></table></figure><p> 创建和恢复时，都可以使用以下命令观察进度，新开一个终端窗口（不要在dd命令所在在终端窗口内）：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo watch -n 5 pkill -USR1 -x dd</span><br></pre></td></tr></table></figure></li><li><p>最重要的最后一步，一定要在重启进入系统前，检查一遍刚恢复的文件系统<br> 使用了逻辑卷安装系统的话：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo e2fsck -f /dev/vgmint/root</span><br></pre></td></tr></table></figure><p> 或，没用使用逻辑卷安装系统的话：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo e2fsck -f /dev/nvme0n1</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用dd命令可以很方便的是整个系统恢复到过去的某一时刻，不必借用任何其它软件。&lt;br&gt;环境：&lt;br&gt;Linux Mint 20.1安装在一块512G的固态硬盘上；&lt;br&gt;镜像文件要放在移动硬盘上，是一块seagete的2T物理磁盘。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先利用</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>为采用next主题的hexo的博客增加rss支持</title>
    <link href="http://example.com/2021/01/16/add-rss-support-for-Next-theme-under-hexo/"/>
    <id>http://example.com/2021/01/16/add-rss-support-for-Next-theme-under-hexo/</id>
    <published>2021-01-16T11:07:48.000Z</published>
    <updated>2021-01-16T11:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>因hexo和next的官方文档不够明晰或有错误，因此，在此记录下正确过程。<br>环境：</p><ul><li><p>hexo: 5.3.0  </p></li><li><p>next: 7.3.0</p></li></ul><p>步骤：  </p><p>步骤：  </p><ol><li><p>在blog站点根目录下先安装hexo-generator-feed：  </p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></li><li><p>blog站点根目录下的配置文件_config.yml中如采用默认配置，则不需要做任何改动。hexo-generator-feed的官方网址的文档中却指出(<em>You can…</em>)需要在_config.yml中增加如下配置内容：</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">hub:</span></span><br><span class="line">    <span class="attr">content:</span></span><br><span class="line">    <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">    <span class="attr">content_limit_delim:</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line">    <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">icon.png</span></span><br><span class="line">    <span class="attr">autodiscovery:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">template:</span></span><br></pre></td></tr></table></figure></li><li><p>在next主题的配置文件～/themes/next/_config.yml中，找到“<em>RSS: /atom.xml || rss</em>”一行，去掉前边的注释。</p></li><li><p>重新部署：  </p><pre><code class="bash">$ hexo clean  $ hexo g -d</code></pre><p>这样，就可以在每篇blog结尾处看到rss图标。  </p></li></ol><p>待证实：如果需要增加自定义要求，可能需要在站点配置文件中接加“<em>feed</em>”段的配置。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;因hexo和next的官方文档不够明晰或有错误，因此，在此记录下正确过程。&lt;br&gt;环境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;hexo: 5.3.0  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;next: 7.3.0&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;步骤：  &lt;/p&gt;
&lt;p&gt;步</summary>
      
    
    
    
    <category term="computer" scheme="http://example.com/categories/computer/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="next" scheme="http://example.com/tags/next/"/>
    
  </entry>
  
</feed>
